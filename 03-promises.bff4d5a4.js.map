{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA8BPL,EAAKa,iBAAiB,UA1BC,SAAAC,GACrBA,EAAMC,iBASN,IAPA,IAAMC,EAAkBhB,EAAKE,cAAc,uBACrCe,EAAiBjB,EAAKE,cAAc,sBACpCgB,EAAclB,EAAKE,cAAc,wBACjCiB,EAAaC,SAASJ,EAAgBK,OACtCC,EAAYF,SAASH,EAAeI,OACpCE,EAASH,SAASF,EAAYG,OAE3BG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BrB,EAAcqB,EAAI,EADEL,EAAaK,EAAIF,GAElCG,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAoCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CACrE0B,QAAS,K,IAGZC,OAAM,SAAAN,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAA7B,GAAS8B,OAAOK,QAAQ,oBAAmCH,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAK,CACpE0B,QAAS,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst settlePromises = event => {\n  event.preventDefault();\n\n  const firstDelayInput = form.querySelector('input[name=\"delay\"]');\n  const delayStepInput = form.querySelector('input[name=\"step\"]');\n  const amountInput = form.querySelector('input[name=\"amount\"]');\n  const firstDelay = parseInt(firstDelayInput.value);\n  const delayStep = parseInt(delayStepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  for (let i = 0; i < amount; i++) {\n    const actualDelay = firstDelay + i * delayStep;\n    createPromise(i + 1, actualDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 5000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          timeout: 5000,\n        });\n      });\n  }\n};\n\nform.addEventListener('submit', settlePromises);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","firstDelayInput","delayStepInput","amountInput","firstDelay","parseInt","value","delayStep","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","timeout","catch","failure"],"version":3,"file":"03-promises.bff4d5a4.js.map"}